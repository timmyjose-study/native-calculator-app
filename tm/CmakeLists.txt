cmake_minimum_required(VERSION 3.13)
set(CMAKE_VERBOSE_MAKEFILE on)

add_compile_options(
    -fexceptions
    -frtti
    -std=c++17
)

file(GLOB tm_SRC CONFIGURE_DEPENDS *.cpp)
add_library(tm STATIC ${tm_SRC})

target_include_directories(tm PUBLIC .)
target_include_directories(react_codegen_AppSpecs PUBLIC .)

message(INFO "CMAKE_ANDROID_ARCH_ABI = ${CMAKE_ANDROID_ARCH_ABI}")

if(CMAKE_ANDROID_ARCH_ABI STREQUAL arm64-v8a)
    message(INFO "Building for ARM 64")
    target_link_libraries(tm ${CMAKE_CURRENT_SOURCE_DIR}/nativecalc/target/aarch64-linux-android/release/libnativecalc.a jsi react_nativemodule_core react_codegen_AppSpecs)
elseif(CMAKE_ANDROID_ARCH_ABI STREQUAL x86)
    message(INFO "Building for x86")
    target_link_libraries(tm ${CMAKE_CURRENT_SOURCE_DIR}/nativecalc/target/i686-linux-android/release/libnativecalc.a jsi react_nativemodule_core react_codegen_AppSpecs)
elseif(CMAKE_ANDROID_ARCH_ABI STREQUAL x86_64)
    message(INFO "Building for x86_64")
    target_link_libraries(tm ${CMAKE_CURRENT_SOURCE_DIR}/nativecalc/target/x86_64-linux-android/release/libnativecalc.a jsi react_nativemodule_core react_codegen_AppSpecs)
elseif(CMAKE_ANDROID_ARCH_ABI STREQUAL armeabi-v7a)
    message(INFO "Building for armeabi-v7a")
    target_link_libraries(tm ${CMAKE_CURRENT_SOURCE_DIR}/nativecalc/target/armv7-linux-androideabi/release/libnativecalc.a jsi react_nativemodule_core react_codegen_AppSpecs)
else()
    message(ERROR "Building for UNKNOWN abi")
endif()

